{
    "root": true,
    "ignorePatterns": ["coverage/**", "projects/**/*", "src/app/models/generated/**"],
    "parserOptions": {
        "project": "./tsconfig.json",
        "createDefaultProgram": true
    },
    "overrides": [
        {
            "parser": "@typescript-eslint/parser",
            "files": ["*.ts"],
            "plugins": ["html", "import", "ordered-imports", "rxjs", "rxjs-angular"],
            "settings": {
                "import/resolver": {
                    "typescript": {}
                }
            },
            "extends": [
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates",
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/recommended-requiring-type-checking",
                "plugin:import/recommended",
                "plugin:import/typescript",
                "plugin:rxjs/recommended",
                "plugin:prettier/recommended"
            ],
            "rules": {
                "@angular-eslint/component-class-suffix": "error",
                "@angular-eslint/component-selector": "off",
                "@angular-eslint/contextual-lifecycle": "error",
                "@angular-eslint/directive-class-suffix": "error",
                "@angular-eslint/directive-selector": "off",
                "@angular-eslint/no-conflicting-lifecycle": "error",
                "@angular-eslint/no-host-metadata-property": "error",
                "@angular-eslint/no-input-rename": "error",
                "@angular-eslint/no-inputs-metadata-property": "error",
                "@angular-eslint/no-output-native": "error",
                "@angular-eslint/no-output-on-prefix": "error",
                "@angular-eslint/no-output-rename": "error",
                "@angular-eslint/no-outputs-metadata-property": "error",
                "@angular-eslint/template/banana-in-box": "off",
                "@angular-eslint/template/no-negated-async": "off",
                "@angular-eslint/use-lifecycle-interface": "off",
                "@angular-eslint/use-pipe-transform-interface": "error",
                "@typescript-eslint/array-type": [
                    "error",
                    {
                        "default": "array"
                    }
                ],
                "@typescript-eslint/ban-types": [
                    "error",
                    {
                        "types": {
                            "Object": {
                                "message": "Avoid using the `Object` type. Did you mean `object`?"
                            },
                            "Function": {
                                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
                            },
                            "Boolean": {
                                "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
                            },
                            "Number": {
                                "message": "Avoid using the `Number` type. Did you mean `number`?"
                            },
                            "String": {
                                "message": "Avoid using the `String` type. Did you mean `string`?"
                            },
                            "Symbol": {
                                "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
                            }
                        }
                    }
                ],
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/dot-notation": "off",
                "@typescript-eslint/explicit-module-boundary-types": "off",
                "@typescript-eslint/explicit-member-accessibility": [
                    "off",
                    {
                        "accessibility": "explicit"
                    }
                ],
                "@typescript-eslint/member-ordering": "off",
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "leadingUnderscore": "allow",
                        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
                    },
                    {
                        "selector": "variable",
                        "modifiers": ["const"],
                        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
                    },
                    {
                        "selector": "parameter",
                        "format": ["camelCase"],
                        "leadingUnderscore": "allow"
                    },
                    {
                        "selector": "typeLike",
                        "format": ["PascalCase"]
                    }
                ],
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-shadow": ["error"],
                "@typescript-eslint/no-var-requires": "error",
                "@typescript-eslint/no-unsafe-assignment": "off",
                "@typescript-eslint/no-unsafe-call": "off",
                "@typescript-eslint/no-unsafe-member-access": "off",
                "@typescript-eslint/no-unsafe-return": "off",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_",
                        "varsIgnorePattern": "^_"
                    }
                ],
                "@typescript-eslint/prefer-regexp-exec": "off",
                "@typescript-eslint/restrict-plus-operands": "off",
                "@typescript-eslint/restrict-template-expressions": "off",
                "@typescript-eslint/unbound-method": [
                    "error",
                    {
                        "ignoreStatic": true
                    }
                ],
                "brace-style": ["error", "1tbs"],
                "id-blacklist": "off",
                "id-match": "off",
                "import/namespace": "off",
                "import/no-named-as-default": "off",
                "import/order": [
                    "error",
                    {
                        "groups": ["builtin", "external", "internal", "object", ["index", "sibling", "parent"]],
                        "pathGroups": [
                            {
                                "pattern": "@shared/**",
                                "group": "external",
                                "position": "after"
                            },
                            {
                                "pattern": "@models/**",
                                "group": "internal",
                                "position": "after"
                            }
                        ],
                        "newlines-between": "always-and-inside-groups",
                        "alphabetize": {
                            "order": "ignore",
                            "caseInsensitive": false
                        }
                    }
                ],
                "no-empty-pattern": "off",
                "no-multiple-empty-lines": "error",
                "no-shadow": "off",
                "no-underscore-dangle": "off",
                "no-unused-vars": "off",
                "one-var": ["off", "never"],
                "prefer-const": "off",
                "ordered-imports/ordered-imports": [
                    "error",
                    {
                        "symbols-first": false,
                        "declaration-ordering": ["any"],
                        "specifier-ordering": "any",
                        "group-ordering": [
                            {
                                "name": "shared",
                                "match": "^@shared",
                                "order": 30
                            },
                            {
                                "name": "models",
                                "match": "^@models",
                                "order": 40
                            },
                            {
                                "name": "current & parent",
                                "match": "^\\.\\.?",
                                "order": 50
                            },
                            {
                                "name": "third-party",
                                "match": ".*",
                                "order": 20
                            }
                        ]
                    }
                ],
                "prettier/prettier": [
                    "error",
                    {},
                    {
                        "usePrettierrc": true
                    }
                ],
                "rxjs/no-implicit-any-catch": "off",
                "rxjs/no-nested-subscribe": "off",
                "rxjs/no-sharereplay": "off"
            }
        },
        {
            "files": ["*.spec.ts", "test.ts"],
            "rules": {
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/no-floating-promises": "off",
                "@typescript-eslint/no-unsafe-assignment": "off",
                "@typescript-eslint/no-unsafe-call": "off",
                "@typescript-eslint/no-unsafe-member-access": "off",
                "@typescript-eslint/no-unused-vars": "off",
                "@typescript-eslint/unbound-method": "off"
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended"],
            "rules": {}
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:prettier/recommended"],
            "rules": {
                "prettier/prettier": [
                    "error",
                    {
                        "parser": "angular"
                    }
                ]
            }
        }
    ]
}
